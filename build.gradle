import org.springframework.boot.gradle.plugin.SpringBootPlugin

plugins {
    id 'java-library'
    id 'maven-publish'
    id 'signing'
    id 'org.springframework.boot' version "${SpringBootVersion}"
    id 'io.spring.dependency-management' version "${DependencyManagement}"
    id "io.github.gradle-nexus.publish-plugin" version "${PublishPlugin}"
}

apply from: 'version.gradle'

allprojects {
    group "${group}"
    version "${version}"

    repositories {
        mavenCentral()
    }
}

subprojects {
    apply plugin: 'java-library'
    apply plugin: 'io.spring.dependency-management'

    dependencyManagement {
        imports {
            mavenBom SpringBootPlugin.BOM_COORDINATES
        }
    }

    sourceCompatibility = JavaVersion.VERSION_21
    targetCompatibility = JavaVersion.VERSION_21

    [compileJava, compileTestJava, javadoc]*.options*.encoding = 'UTF-8'

    compileJava.options.compilerArgs.addAll(['-parameters'])

    configurations {
        compileOnly {
            extendsFrom annotationProcessor
        }
    }

    dependencies {
        compileOnly 'org.projectlombok:lombok'
        annotationProcessor 'org.projectlombok:lombok'

        testCompileOnly 'org.projectlombok:lombok'
        testAnnotationProcessor 'org.projectlombok:lombok'
    }

    tasks.named('test') {
        useJUnitPlatform()
    }

    if (project.name.indexOf('example') >= 0) {
        return
    }

    apply plugin: 'maven-publish'
    apply plugin: 'signing'
    publishing {
        publications {
            mavenJava(MavenPublication) {
                from(components.java)

                pom {
                    name = "vline"
                    description = "edge data transfer"
                    url = "https://github.com/vbeats/vline"
                    licenses {
                        license {
                            name = "MIT"
                            url = "https://raw.githubusercontent.com/vbeats/vline/refs/heads/dev/LICENSE"
                        }
                    }
                    developers {
                        developer {
                            id = "bootvue"
                            name = "bootvue"
                            email = "bootvue@gmail.com"
                        }
                    }
                    scm {
                        connection = "https://github.com/vbeats"
                        developerConnection = "https://github.com/vbeats"
                        url = "https://github.com/vbeats"
                    }
                }
            }
        }
    }

    signing {
        def keyId = System.getenv('SIGNING_KEYID')
        def secretKey = new File(System.getenv('SIGNING_SECRETKEY'))
        def password = System.getenv('SIGNING_PASSWORD')

        useInMemoryPgpKeys(keyId, secretKey.text, password ? password : '')
        sign publishing.publications.mavenJava
    }
}

nexusPublishing {
    repositories {
        sonatype {
            username = System.getenv('SONATYPE_USERNAME')
            password = System.getenv('SONATYPE_PASSWORD')
        }
    }
}
